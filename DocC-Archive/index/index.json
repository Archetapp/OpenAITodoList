{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/init(token:organizationidentifier:host:port:scheme:timeoutinterval:)","title":"init(token: String, organizationIdentifier: String?, host: String, port: Int, scheme: String, timeoutInterval: TimeInterval)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/host","title":"let host: String","type":"property"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/organizationidentifier","title":"let organizationIdentifier: String?","type":"property"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/port","title":"let port: Int","type":"property"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/scheme","title":"let scheme: String","type":"property"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/timeoutinterval","title":"let timeoutInterval: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/openai\/configuration-swift.struct\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/openai\/openai\/configuration-swift.struct","title":"OpenAI.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/init(apitoken:)","title":"init(apiToken: String)","type":"init"},{"path":"\/documentation\/openai\/openai\/init(configuration:)","title":"init(configuration: Configuration)","type":"init"},{"path":"\/documentation\/openai\/openai\/init(configuration:session:)","title":"init(configuration: Configuration, session: URLSession)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/configuration-swift.property","title":"let configuration: Configuration","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/audiocreatespeech(query:completion:)","title":"func audioCreateSpeech(query: AudioSpeechQuery, completion: (Result<AudioSpeechResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranscriptions(query:completion:)","title":"func audioTranscriptions(query: AudioTranscriptionQuery, completion: (Result<AudioTranscriptionResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranslations(query:completion:)","title":"func audioTranslations(query: AudioTranslationQuery, completion: (Result<AudioTranslationResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/chats(query:completion:)","title":"func chats(query: ChatQuery, completion: (Result<ChatResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/chatsstream(query:onresult:completion:)","title":"func chatsStream(query: ChatQuery, onResult: (Result<ChatStreamResult, Error>) -> Void, completion: ((Error?) -> Void)?)","type":"method"},{"path":"\/documentation\/openai\/openai\/completions(query:completion:)","title":"func completions(query: CompletionsQuery, completion: (Result<CompletionsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/completionsstream(query:onresult:completion:)","title":"func completionsStream(query: CompletionsQuery, onResult: (Result<CompletionsResult, Error>) -> Void, completion: ((Error?) -> Void)?)","type":"method"},{"path":"\/documentation\/openai\/openai\/edits(query:completion:)","title":"func edits(query: EditsQuery, completion: (Result<EditsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/embeddings(query:completion:)","title":"func embeddings(query: EmbeddingsQuery, completion: (Result<EmbeddingsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/imageedits(query:completion:)","title":"func imageEdits(query: ImageEditsQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/imagevariations(query:completion:)","title":"func imageVariations(query: ImageVariationsQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/images(query:completion:)","title":"func images(query: ImagesQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/model(query:completion:)","title":"func model(query: ModelQuery, completion: (Result<ModelResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/models(completion:)","title":"func models(completion: (Result<ModelsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openai\/moderations(query:completion:)","title":"func moderations(query: ModerationsQuery, completion: (Result<ModerationsResult, Error>) -> Void)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/openai\/audiocreatespeech(query:)-6z48h","title":"func audioCreateSpeech(query: AudioSpeechQuery) async throws -> AudioSpeechResult","type":"method"},{"path":"\/documentation\/openai\/openai\/audiocreatespeech(query:)-8kn4k","title":"func audioCreateSpeech(query: AudioSpeechQuery) -> AnyPublisher<AudioSpeechResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranscriptions(query:)-2feu1","title":"func audioTranscriptions(query: AudioTranscriptionQuery) -> AnyPublisher<AudioTranscriptionResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranscriptions(query:)-6qy9a","title":"func audioTranscriptions(query: AudioTranscriptionQuery) async throws -> AudioTranscriptionResult","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranslations(query:)-1jzb0","title":"func audioTranslations(query: AudioTranslationQuery) async throws -> AudioTranslationResult","type":"method"},{"path":"\/documentation\/openai\/openai\/audiotranslations(query:)-5movc","title":"func audioTranslations(query: AudioTranslationQuery) -> AnyPublisher<AudioTranslationResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/chats(query:)-3jt3w","title":"func chats(query: ChatQuery) async throws -> ChatResult","type":"method"},{"path":"\/documentation\/openai\/openai\/chats(query:)-6fbph","title":"func chats(query: ChatQuery) -> AnyPublisher<ChatResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/chatsstream(query:)-1zmxd","title":"func chatsStream(query: ChatQuery) -> AnyPublisher<Result<ChatStreamResult, Error>, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/chatsstream(query:)-2b5e3","title":"func chatsStream(query: ChatQuery) -> AsyncThrowingStream<ChatStreamResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/completions(query:)-1arpi","title":"func completions(query: CompletionsQuery) -> AnyPublisher<CompletionsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/completions(query:)-973fx","title":"func completions(query: CompletionsQuery) async throws -> CompletionsResult","type":"method"},{"path":"\/documentation\/openai\/openai\/completionsstream(query:)-1ni6b","title":"func completionsStream(query: CompletionsQuery) -> AnyPublisher<Result<CompletionsResult, Error>, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/completionsstream(query:)-437il","title":"func completionsStream(query: CompletionsQuery) -> AsyncThrowingStream<CompletionsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/edits(query:)-2u150","title":"func edits(query: EditsQuery) -> AnyPublisher<EditsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/edits(query:)-5krtb","title":"func edits(query: EditsQuery) async throws -> EditsResult","type":"method"},{"path":"\/documentation\/openai\/openai\/embeddings(query:)-5cey","title":"func embeddings(query: EmbeddingsQuery) -> AnyPublisher<EmbeddingsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/embeddings(query:)-7vua6","title":"func embeddings(query: EmbeddingsQuery) async throws -> EmbeddingsResult","type":"method"},{"path":"\/documentation\/openai\/openai\/imageedits(query:)-3ddue","title":"func imageEdits(query: ImageEditsQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/imageedits(query:)-5fgv","title":"func imageEdits(query: ImageEditsQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openai\/imagevariations(query:)-8q1p1","title":"func imageVariations(query: ImageVariationsQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/imagevariations(query:)-90p1j","title":"func imageVariations(query: ImageVariationsQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openai\/images(query:)-1ada2","title":"func images(query: ImagesQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/images(query:)-5skh8","title":"func images(query: ImagesQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openai\/model(query:)-4obhp","title":"func model(query: ModelQuery) async throws -> ModelResult","type":"method"},{"path":"\/documentation\/openai\/openai\/model(query:)-9dzze","title":"func model(query: ModelQuery) -> AnyPublisher<ModelResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/models()-14wd8","title":"func models() async throws -> ModelsResult","type":"method"},{"path":"\/documentation\/openai\/openai\/models()-2ar7w","title":"func models() -> AnyPublisher<ModelsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/moderations(query:)-364si","title":"func moderations(query: ModerationsQuery) -> AnyPublisher<ModerationsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openai\/moderations(query:)-9mrzi","title":"func moderations(query: ModerationsQuery) async throws -> ModerationsResult","type":"method"}],"path":"\/documentation\/openai\/openai\/openaiprotocol-implementations","title":"OpenAIProtocol Implementations","type":"symbol"}],"path":"\/documentation\/openai\/openai","title":"OpenAI","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/openaiprotocol\/audiocreatespeech(query:)-4acp","title":"func audioCreateSpeech(query: AudioSpeechQuery) async throws -> AudioSpeechResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiocreatespeech(query:)-72ieu","title":"func audioCreateSpeech(query: AudioSpeechQuery) -> AnyPublisher<AudioSpeechResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiocreatespeech(query:completion:)","title":"func audioCreateSpeech(query: AudioSpeechQuery, completion: (Result<AudioSpeechResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranscriptions(query:)-4npp6","title":"func audioTranscriptions(query: AudioTranscriptionQuery) -> AnyPublisher<AudioTranscriptionResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranscriptions(query:)-9opg7","title":"func audioTranscriptions(query: AudioTranscriptionQuery) async throws -> AudioTranscriptionResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranscriptions(query:completion:)","title":"func audioTranscriptions(query: AudioTranscriptionQuery, completion: (Result<AudioTranscriptionResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranslations(query:)-8ojsm","title":"func audioTranslations(query: AudioTranslationQuery) -> AnyPublisher<AudioTranslationResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranslations(query:)-vaqw","title":"func audioTranslations(query: AudioTranslationQuery) async throws -> AudioTranslationResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/audiotranslations(query:completion:)","title":"func audioTranslations(query: AudioTranslationQuery, completion: (Result<AudioTranslationResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chats(query:)-6ym89","title":"func chats(query: ChatQuery) -> AnyPublisher<ChatResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chats(query:)-95auc","title":"func chats(query: ChatQuery) async throws -> ChatResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chats(query:completion:)","title":"func chats(query: ChatQuery, completion: (Result<ChatResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chatsstream(query:)-83n1d","title":"func chatsStream(query: ChatQuery) -> AsyncThrowingStream<ChatStreamResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chatsstream(query:)-8mhm8","title":"func chatsStream(query: ChatQuery) -> AnyPublisher<Result<ChatStreamResult, Error>, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/chatsstream(query:onresult:completion:)","title":"func chatsStream(query: ChatQuery, onResult: (Result<ChatStreamResult, Error>) -> Void, completion: ((Error?) -> Void)?)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completions(query:)-1u4j8","title":"func completions(query: CompletionsQuery) async throws -> CompletionsResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completions(query:)-6hafx","title":"func completions(query: CompletionsQuery) -> AnyPublisher<CompletionsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completions(query:completion:)","title":"func completions(query: CompletionsQuery, completion: (Result<CompletionsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completionsstream(query:)-39k8o","title":"func completionsStream(query: CompletionsQuery) -> AsyncThrowingStream<CompletionsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completionsstream(query:)-3ycd5","title":"func completionsStream(query: CompletionsQuery) -> AnyPublisher<Result<CompletionsResult, Error>, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/completionsstream(query:onresult:completion:)","title":"func completionsStream(query: CompletionsQuery, onResult: (Result<CompletionsResult, Error>) -> Void, completion: ((Error?) -> Void)?)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/edits(query:)-2ziwx","title":"func edits(query: EditsQuery) async throws -> EditsResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/edits(query:)-9g012","title":"func edits(query: EditsQuery) -> AnyPublisher<EditsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/edits(query:completion:)","title":"func edits(query: EditsQuery, completion: (Result<EditsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/embeddings(query:)-3k0s1","title":"func embeddings(query: EmbeddingsQuery) -> AnyPublisher<EmbeddingsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/embeddings(query:)-563rd","title":"func embeddings(query: EmbeddingsQuery) async throws -> EmbeddingsResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/embeddings(query:completion:)","title":"func embeddings(query: EmbeddingsQuery, completion: (Result<EmbeddingsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imageedits(query:)-14i7p","title":"func imageEdits(query: ImageEditsQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imageedits(query:)-d1w4","title":"func imageEdits(query: ImageEditsQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imageedits(query:completion:)","title":"func imageEdits(query: ImageEditsQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imagevariations(query:)-6fa5d","title":"func imageVariations(query: ImageVariationsQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imagevariations(query:)-99c8m","title":"func imageVariations(query: ImageVariationsQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/imagevariations(query:completion:)","title":"func imageVariations(query: ImageVariationsQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/images(query:)-7vuj0","title":"func images(query: ImagesQuery) -> AnyPublisher<ImagesResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/images(query:)-8q0ua","title":"func images(query: ImagesQuery) async throws -> ImagesResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/images(query:completion:)","title":"func images(query: ImagesQuery, completion: (Result<ImagesResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/model(query:)-6mi7z","title":"func model(query: ModelQuery) -> AnyPublisher<ModelResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/model(query:)-6ukzq","title":"func model(query: ModelQuery) async throws -> ModelResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/model(query:completion:)","title":"func model(query: ModelQuery, completion: (Result<ModelResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/models()-3q6i8","title":"func models() -> AnyPublisher<ModelsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/models()-99pfv","title":"func models() async throws -> ModelsResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/models(completion:)","title":"func models(completion: (Result<ModelsResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/moderations(query:)-3eu71","title":"func moderations(query: ModerationsQuery) async throws -> ModerationsResult","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/moderations(query:)-5tvis","title":"func moderations(query: ModerationsQuery) -> AnyPublisher<ModerationsResult, Error>","type":"method"},{"path":"\/documentation\/openai\/openaiprotocol\/moderations(query:completion:)","title":"func moderations(query: ModerationsQuery, completion: (Result<ModerationsResult, Error>) -> Void)","type":"method"}],"path":"\/documentation\/openai\/openaiprotocol","title":"OpenAIProtocol","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/apierror\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/apierror\/init(message:type:param:code:)","title":"init(message: String, type: String, param: String?, code: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierror\/code","title":"let code: String?","type":"property"},{"path":"\/documentation\/openai\/apierror\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/openai\/apierror\/param","title":"let param: String?","type":"property"},{"path":"\/documentation\/openai\/apierror\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/apierror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/apierror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/openai\/apierror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/openai\/apierror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/openai\/apierror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/openai\/apierror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/openai\/apierror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/openai\/apierror","title":"APIError","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/apierrorresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierrorresponse\/error","title":"let error: APIError","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/apierrorresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/apierrorresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierrorresponse\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/openai\/apierrorresponse\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/apierrorresponse\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/openai\/apierrorresponse\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/openai\/apierrorresponse\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/openai\/apierrorresponse\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/openai\/apierrorresponse\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/openai\/apierrorresponse","title":"APIErrorResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/audiospeechquery\/init(model:input:voice:responseformat:speed:)","title":"init(model: Model, input: String, voice: AudioSpeechVoice, responseFormat: AudioSpeechResponseFormat, speed: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/input","title":"let input: String","type":"property"},{"path":"\/documentation\/openai\/audiospeechquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/audiospeechquery\/responseformat","title":"let responseFormat: AudioSpeechResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.property","title":"let speed: String?","type":"property"},{"path":"\/documentation\/openai\/audiospeechquery\/voice","title":"let voice: AudioSpeechVoice","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/normalizespeechspeed(_:)","title":"static func normalizeSpeechSpeed(Double?) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/aac","title":"case aac","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/flac","title":"case flac","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/mp3","title":"case mp3","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/opus","title":"case opus","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechresponseformat","title":"AudioSpeechQuery.AudioSpeechResponseFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/alloy","title":"case alloy","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/echo","title":"case echo","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/fable","title":"case fable","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/nova","title":"case nova","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/onyx","title":"case onyx","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/shimmer","title":"case shimmer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiospeechquery\/audiospeechvoice","title":"AudioSpeechQuery.AudioSpeechVoice","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/input","title":"case input","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/responseformat","title":"case responseFormat","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/speed","title":"case speed","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/voice","title":"case voice","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiospeechquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiospeechquery\/codingkeys","title":"AudioSpeechQuery.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/max","title":"case max","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/min","title":"case min","type":"case"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/normal","title":"case normal","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Double)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiospeechquery\/speed-swift.enum","title":"AudioSpeechQuery.Speed","type":"enum"}],"path":"\/documentation\/openai\/audiospeechquery","title":"AudioSpeechQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechresult\/audio","title":"let audio: Data","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiospeechresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiospeechresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiospeechresult","title":"AudioSpeechResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/init(file:filetype:model:prompt:temperature:language:responseformat:)","title":"init(file: Data, fileType: `Self`.FileType, model: Model, prompt: String?, temperature: Double?, language: String?, responseFormat: `Self`.ResponseFormat?)","type":"init"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/file","title":"let file: Data","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.property","title":"let fileType: `Self`.FileType","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/language","title":"let language: String?","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/prompt","title":"let prompt: String?","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/temperature","title":"let temperature: Double?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/flac","title":"case flac","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/m4a","title":"case m4a","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/mp3","title":"case mp3","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/mp4","title":"case mp4","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/mpeg","title":"case mpeg","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/mpga","title":"case mpga","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/ogg","title":"case ogg","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/wav","title":"case wav","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/webm","title":"case webm","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/filetype-swift.enum","title":"AudioTranscriptionQuery.FileType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/json","title":"case json","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/srt","title":"case srt","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/text","title":"case text","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/verbosejson","title":"case verboseJson","type":"case"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/vtt","title":"case vtt","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiotranscriptionquery\/responseformat-swift.enum","title":"AudioTranscriptionQuery.ResponseFormat","type":"enum"}],"path":"\/documentation\/openai\/audiotranscriptionquery","title":"AudioTranscriptionQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionresult\/text","title":"let text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranscriptionresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiotranscriptionresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiotranscriptionresult","title":"AudioTranscriptionResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationquery\/init(file:filetype:model:prompt:temperature:responseformat:)","title":"init(file: Data, fileType: `Self`.FileType, model: Model, prompt: String?, temperature: Double?, responseFormat: `Self`.ResponseFormat?)","type":"init"},{"path":"\/documentation\/openai\/audiotranslationquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationquery\/file","title":"let file: Data","type":"property"},{"path":"\/documentation\/openai\/audiotranslationquery\/filetype-swift.property","title":"let fileType: `Self`.FileType","type":"property"},{"path":"\/documentation\/openai\/audiotranslationquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/audiotranslationquery\/prompt","title":"let prompt: String?","type":"property"},{"path":"\/documentation\/openai\/audiotranslationquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/audiotranslationquery\/temperature","title":"let temperature: Double?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationquery\/filetype-swift.typealias","title":"AudioTranslationQuery.FileType","type":"typealias"},{"path":"\/documentation\/openai\/audiotranslationquery\/responseformat-swift.typealias","title":"AudioTranslationQuery.ResponseFormat","type":"typealias"}],"path":"\/documentation\/openai\/audiotranslationquery","title":"AudioTranslationQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationresult\/text","title":"let text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/audiotranslationresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/audiotranslationresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/audiotranslationresult","title":"AudioTranslationResult","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/init(type:properties:pattern:const:enum:multipleof:minimum:maximum:minitems:maxitems:uniqueitems:)","title":"init(type: `Self`.JSONType, properties: [String : Property]?, pattern: String?, const: String?, enum: [String]?, multipleOf: Int?, minimum: Double?, maximum: Double?, minItems: Int?, maxItems: Int?, uniqueItems: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/const","title":"let const: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/enum","title":"let `enum`: [String]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/maxitems","title":"let maxItems: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/maximum","title":"let maximum: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/minitems","title":"let minItems: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/minimum","title":"let minimum: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/multipleof","title":"let multipleOf: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/pattern","title":"let pattern: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/properties","title":"let properties: [String : Property]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/type","title":"let type: `Self`.JSONType","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/uniqueitems","title":"let uniqueItems: Bool?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/jsontype","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters.Property.Items.JSONType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.struct","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters.Property.Items","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/init(type:description:format:items:required:pattern:const:enum:multipleof:minimum:maximum:minitems:maxitems:uniqueitems:)","title":"init(type: `Self`.JSONType, description: String?, format: String?, items: `Self`.Items?, required: [String]?, pattern: String?, const: String?, enum: [String]?, multipleOf: Int?, minimum: Double?, maximum: Double?, minItems: Int?, maxItems: Int?, uniqueItems: Bool?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/const","title":"let const: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/enum","title":"let `enum`: [String]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/format","title":"let format: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/items-swift.property","title":"let items: `Self`.Items?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/maxitems","title":"let maxItems: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/maximum","title":"let maximum: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/minitems","title":"let minItems: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/minimum","title":"let minimum: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/multipleof","title":"let multipleOf: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/pattern","title":"let pattern: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/required","title":"let required: [String]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/type","title":"let type: `Self`.JSONType","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/uniqueitems","title":"let uniqueItems: Bool?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/jsontype","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters.Property.JSONType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/property","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters.Property","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/init(type:properties:required:pattern:const:enum:multipleof:minimum:maximum:)","title":"init(type: `Self`.JSONType, properties: [String : Property]?, required: [String]?, pattern: String?, const: String?, enum: [String]?, multipleOf: Int?, minimum: Int?, maximum: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/const","title":"let const: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/enum","title":"let `enum`: [String]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/maximum","title":"let maximum: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/minimum","title":"let minimum: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/multipleof","title":"let multipleOf: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/pattern","title":"let pattern: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/properties","title":"let properties: [String : Property]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/required","title":"let required: [String]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/type","title":"let type: `Self`.JSONType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/array","title":"case array","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/boolean","title":"case boolean","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/integer","title":"case integer","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/null","title":"case null","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/number","title":"case number","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/object","title":"case object","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/string","title":"case string","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/jsontype","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters.JSONType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/functionparameters","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition.FunctionParameters","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/init(name:description:parameters:)","title":"init(name: String, description: String?, parameters: `Self`.FunctionParameters?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/parameters","title":"let parameters: `Self`.FunctionParameters?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/functiondefinition","title":"ChatQuery.ChatCompletionToolParam.FunctionDefinition","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/init(function:)","title":"init(function: `Self`.FunctionDefinition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/function","title":"let function: `Self`.FunctionDefinition","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/type","title":"let type: `Self`.ToolsType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/function","title":"case function","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/toolstype","title":"ChatQuery.ChatCompletionToolParam.ToolsType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletiontoolparam","title":"ChatQuery.ChatCompletionToolParam","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/init(messages:model:frequencypenalty:logitbias:logprobs:maxtokens:n:presencepenalty:responseformat:seed:stop:temperature:toolchoice:tools:toplogprobs:topp:user:stream:)","title":"init(messages: [`Self`.ChatCompletionMessageParam], model: Model, frequencyPenalty: Double?, logitBias: [String : Int]?, logprobs: Bool?, maxTokens: Int?, n: Int?, presencePenalty: Double?, responseFormat: `Self`.ResponseFormat?, seed: Int?, stop: `Self`.Stop?, temperature: Double?, toolChoice: `Self`.ChatCompletionFunctionCallOptionParam?, tools: [`Self`.ChatCompletionToolParam]?, topLogprobs: Int?, topP: Double?, user: String?, stream: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/frequencypenalty","title":"let frequencyPenalty: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/logitbias","title":"let logitBias: [String : Int]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/logprobs","title":"let logprobs: Bool?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/maxtokens","title":"let maxTokens: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/messages","title":"let messages: [`Self`.ChatCompletionMessageParam]","type":"property"},{"path":"\/documentation\/openai\/chatquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/chatquery\/n","title":"let n: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/presencepenalty","title":"let presencePenalty: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/seed","title":"let seed: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.property","title":"let stop: Stop?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/stream","title":"var stream: Bool","type":"property"},{"path":"\/documentation\/openai\/chatquery\/temperature","title":"let temperature: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/toolchoice","title":"let toolChoice: `Self`.ChatCompletionFunctionCallOptionParam?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/tools","title":"let tools: [`Self`.ChatCompletionToolParam]?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/toplogprobs","title":"let topLogprobs: Int?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/topp","title":"let topP: Double?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/user","title":"let user: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/function(_:)","title":"case function(String)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/init(function:)","title":"init(function: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionfunctioncalloptionparam","title":"ChatQuery.ChatCompletionFunctionCallOptionParam","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall\/arguments","title":"let arguments: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/functioncall","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam.ChatCompletionMessageToolCallParam.FunctionCall","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/init(id:function:)","title":"init(id: String, function: `Self`.FunctionCall)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/function","title":"let function: `Self`.FunctionCall","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/type","title":"let type: `Self`.ToolsType","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/toolstype","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam.ChatCompletionMessageToolCallParam.ToolsType","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/chatcompletionmessagetoolcallparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam.ChatCompletionMessageToolCallParam","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/init(content:name:toolcalls:)","title":"init(content: String?, name: String?, toolCalls: [`Self`.ChatCompletionMessageToolCallParam]?)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/content","title":"let content: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/role-swift.property","title":"let role: `Self`.Role","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/toolcalls","title":"let toolCalls: [`Self`.ChatCompletionMessageToolCallParam]?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/role-swift.typealias","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam.Role","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/content","title":"case content","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/role","title":"case role","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/toolcalls","title":"case toolCalls","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/codingkeys","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionassistantmessageparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionAssistantMessageParam","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/init(content:name:)","title":"init(content: String, name: String?)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/content","title":"let content: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/role-swift.property","title":"let role: `Self`.Role","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/role-swift.typealias","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionSystemMessageParam.Role","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionsystemmessageparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionSystemMessageParam","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/init(content:toolcallid:)","title":"init(content: String, toolCallId: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/content","title":"let content: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/role-swift.property","title":"let role: `Self`.Role","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/toolcallid","title":"let toolCallId: String","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/role-swift.typealias","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionToolMessageParam.Role","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/content","title":"case content","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/role","title":"case role","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/toolcallid","title":"case toolCallId","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/codingkeys","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionToolMessageParam.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletiontoolmessageparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionToolMessageParam","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/init(content:name:)","title":"init(content: Content, name: String?)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.property","title":"let content: Content","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/role-swift.property","title":"let role: `Self`.Role","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/role-swift.typealias","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Role","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/init(url:detail:)","title":"init(url: String, detail: Detail)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.property","title":"let detail: Detail","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/url","title":"let url: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/auto","title":"case auto","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/high","title":"case high","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/low","title":"case low","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/detail-swift.enum","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content.ChatCompletionContentPartImageParam.ImageURL.Detail","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.struct","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content.ChatCompletionContentPartImageParam.ImageURL","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/init(imageurl:)","title":"init(imageUrl: ImageURL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/imageurl-swift.property","title":"let imageUrl: ImageURL","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/type","title":"let type: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/imageurl","title":"case imageUrl","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/codingkeys","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content.ChatCompletionContentPartImageParam.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content.ChatCompletionContentPartImageParam","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/init(text:)","title":"init(text: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/type","title":"let type: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content.ChatCompletionContentPartTextParam","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentpartimageparam(_:)","title":"case chatCompletionContentPartImageParam(ChatCompletionContentPartImageParam)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/chatcompletioncontentparttextparam(_:)","title":"case chatCompletionContentPartTextParam(ChatCompletionContentPartTextParam)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/string(_:)","title":"case string(String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/init(chatcompletioncontentpartimageparam:)","title":"init(chatCompletionContentPartImageParam: ChatCompletionContentPartImageParam)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/init(chatcompletioncontentparttextparam:)","title":"init(chatCompletionContentPartTextParam: ChatCompletionContentPartTextParam)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/init(string:)","title":"init(string: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/imageurl","title":"var imageUrl: `Self`.ChatCompletionContentPartImageParam.ImageURL?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/text","title":"var text: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/content-swift.enum","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam.Content","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/chatcompletionusermessageparam","title":"ChatQuery.ChatCompletionMessageParam.ChatCompletionUserMessageParam","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/assistant(_:)","title":"case assistant(`Self`.ChatCompletionAssistantMessageParam)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/system(_:)","title":"case system(`Self`.ChatCompletionSystemMessageParam)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/tool(_:)","title":"case tool(`Self`.ChatCompletionToolMessageParam)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/user(_:)","title":"case user(`Self`.ChatCompletionUserMessageParam)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/init(role:content:imageurl:name:toolcalls:toolcallid:)","title":"init?(role: Role, content: String?, imageUrl: URL?, name: String?, toolCalls: [`Self`.ChatCompletionAssistantMessageParam.ChatCompletionMessageToolCallParam]?, toolCallId: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/content","title":"var content: `Self`.ChatCompletionUserMessageParam.Content?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.property","title":"var role: Role","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/toolcallid","title":"var toolCallId: String?","type":"property"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/toolcalls","title":"var toolCalls: [`Self`.ChatCompletionAssistantMessageParam.ChatCompletionMessageToolCallParam]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/assistant","title":"case assistant","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/system","title":"case system","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/tool","title":"case tool","type":"case"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/role-swift.enum","title":"ChatQuery.ChatCompletionMessageParam.Role","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/chatcompletionmessageparam","title":"ChatQuery.ChatCompletionMessageParam","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/frequencypenalty","title":"case frequencyPenalty","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/logitbias","title":"case logitBias","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/logprobs","title":"case logprobs","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/maxtokens","title":"case maxTokens","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/messages","title":"case messages","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/n","title":"case n","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/presencepenalty","title":"case presencePenalty","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/responseformat","title":"case responseFormat","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/seed","title":"case seed","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/stream","title":"case stream","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/temperature","title":"case temperature","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/toolchoice","title":"case toolChoice","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/tools","title":"case tools","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/toplogprobs","title":"case topLogprobs","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/topp","title":"case topP","type":"case"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/codingkeys","title":"ChatQuery.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/jsonobject","title":"case jsonObject","type":"case"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/text","title":"case text","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/responseformat-swift.enum","title":"ChatQuery.ResponseFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/stringlist(_:)","title":"case stringList([String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/init(string:)","title":"init(string: String)","type":"init"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/init(stringlist:)","title":"init(stringList: [String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/stop-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery\/stop-swift.enum","title":"ChatQuery.Stop","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatquery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatquery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatquery","title":"ChatQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/bytes","title":"let bytes: [Int]?","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/logprob","title":"let logprob: Double","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/token","title":"let token: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob","title":"ChatResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob.TopLogprob","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/bytes","title":"let bytes: [Int]?","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/logprob","title":"let logprob: Double","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/token","title":"let token: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprobs","title":"let topLogprobs: [TopLogprob]","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/bytes","title":"case bytes","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/logprob","title":"case logprob","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/toplogprobs","title":"case topLogprobs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys","title":"ChatResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob","title":"ChatResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/content","title":"let content: [`Self`.ChatCompletionTokenLogprob]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/choicelogprobs","title":"ChatResult.Choice.ChoiceLogprobs","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.property","title":"let finishReason: String?","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/logprobs","title":"let logprobs: `Self`.ChoiceLogprobs?","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/message","title":"let message: `Self`.ChatCompletionMessage","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/chatcompletionmessage","title":"ChatResult.Choice.ChatCompletionMessage","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/finishreason","title":"case finishReason","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/index","title":"case index","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/logprobs","title":"case logprobs","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/message","title":"case message","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/codingkeys","title":"ChatResult.Choice.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/contentfilter","title":"case contentFilter","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/functioncall","title":"case functionCall","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/length","title":"case length","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/stop","title":"case stop","type":"case"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/toolcalls","title":"case toolCalls","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice\/finishreason-swift.enum","title":"ChatResult.Choice.FinishReason","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/choice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/choice","title":"ChatResult.Choice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/completionusage\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/completionusage\/completiontokens","title":"let completionTokens: Int","type":"property"},{"path":"\/documentation\/openai\/chatresult\/completionusage\/prompttokens","title":"let promptTokens: Int","type":"property"},{"path":"\/documentation\/openai\/chatresult\/completionusage\/totaltokens","title":"let totalTokens: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/completionusage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/completionusage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/completionusage","title":"ChatResult.CompletionUsage","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/choices","title":"let choices: [Choice]","type":"property"},{"path":"\/documentation\/openai\/chatresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/chatresult\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/model","title":"let model: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/systemfingerprint","title":"let systemFingerprint: String?","type":"property"},{"path":"\/documentation\/openai\/chatresult\/usage","title":"let usage: `Self`.CompletionUsage?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/choices","title":"case choices","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/created","title":"case created","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/object","title":"case object","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/systemfingerprint","title":"case systemFingerprint","type":"case"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/usage","title":"case usage","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatresult\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatresult\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult\/codingkeys","title":"ChatResult.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatresult","title":"ChatResult","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/init(arguments:name:)","title":"init(arguments: String?, name: String?)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/arguments","title":"let arguments: String?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/name","title":"let name: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/choicedeltatoolcallfunction","title":"ChatStreamResult.Choice.ChoiceDelta.ChoiceDeltaToolCall.ChoiceDeltaToolCallFunction","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/init(index:id:function:)","title":"init(index: Int, id: String?, function: `Self`.ChoiceDeltaToolCallFunction?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/function","title":"let function: `Self`.ChoiceDeltaToolCallFunction?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/choicedeltatoolcall","title":"ChatStreamResult.Choice.ChoiceDelta.ChoiceDeltaToolCall","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/content","title":"let content: String?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/role-swift.property","title":"let role: `Self`.Role?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/toolcalls","title":"let toolCalls: [`Self`.ChoiceDeltaToolCall]?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/role-swift.typealias","title":"ChatStreamResult.Choice.ChoiceDelta.Role","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/content","title":"case content","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/role","title":"case role","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/toolcalls","title":"case toolCalls","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/codingkeys","title":"ChatStreamResult.Choice.ChoiceDelta.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicedelta","title":"ChatStreamResult.Choice.ChoiceDelta","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/bytes","title":"let bytes: [Int]?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/logprob","title":"let logprob: Double","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/token","title":"let token: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprob","title":"ChatStreamResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob.TopLogprob","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/bytes","title":"let bytes: [Int]?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/logprob","title":"let logprob: Double","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/token","title":"let token: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/toplogprobs","title":"let topLogprobs: [`Self`.TopLogprob]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/bytes","title":"case bytes","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/logprob","title":"case logprob","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/token","title":"case token","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/toplogprobs","title":"case topLogprobs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/codingkeys","title":"ChatStreamResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/chatcompletiontokenlogprob","title":"ChatStreamResult.Choice.ChoiceLogprobs.ChatCompletionTokenLogprob","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/content","title":"let content: [`Self`.ChatCompletionTokenLogprob]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/choicelogprobs","title":"ChatStreamResult.Choice.ChoiceLogprobs","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/delta","title":"let delta: `Self`.ChoiceDelta","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/finishreason-swift.property","title":"let finishReason: FinishReason?","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/logprobs","title":"let logprobs: `Self`.ChoiceLogprobs?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/finishreason-swift.typealias","title":"ChatStreamResult.Choice.FinishReason","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/delta","title":"case delta","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/finishreason","title":"case finishReason","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/index","title":"case index","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/logprobs","title":"case logprobs","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/codingkeys","title":"ChatStreamResult.Choice.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/choice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/choice","title":"ChatStreamResult.Choice","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/choices","title":"let choices: [Choice]","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/model","title":"let model: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/systemfingerprint","title":"let systemFingerprint: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/choices","title":"case choices","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/created","title":"case created","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/object","title":"case object","type":"case"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/systemfingerprint","title":"case systemFingerprint","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/chatstreamresult\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult\/codingkeys","title":"ChatStreamResult.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/chatstreamresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/chatstreamresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/chatstreamresult","title":"ChatStreamResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/completionsquery\/init(model:prompt:temperature:maxtokens:topp:frequencypenalty:presencepenalty:stop:user:)","title":"init(model: Model, prompt: String, temperature: Double?, maxTokens: Int?, topP: Double?, frequencyPenalty: Double?, presencePenalty: Double?, stop: [String]?, user: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsquery\/frequencypenalty","title":"let frequencyPenalty: Double?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/maxtokens","title":"let maxTokens: Int?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/presencepenalty","title":"let presencePenalty: Double?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/prompt","title":"let prompt: String","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/stop","title":"let stop: [String]?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/temperature","title":"let temperature: Double?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/topp","title":"let topP: Double?","type":"property"},{"path":"\/documentation\/openai\/completionsquery\/user","title":"let user: String?","type":"property"}],"path":"\/documentation\/openai\/completionsquery","title":"CompletionsQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/choice\/finishreason","title":"let finishReason: String?","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/choice\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/choice\/text","title":"let text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/choice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/completionsresult\/choice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/completionsresult\/choice","title":"CompletionsResult.Choice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/completiontokens","title":"let completionTokens: Int","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/prompttokens","title":"let promptTokens: Int","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/totaltokens","title":"let totalTokens: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/completionsresult\/usage-swift.struct","title":"CompletionsResult.Usage","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/choices","title":"let choices: [Choice]","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/completionsresult\/usage-swift.property","title":"let usage: Usage?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/completionsresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/completionsresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/completionsresult","title":"CompletionsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/editsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/editsquery\/init(model:input:instruction:n:temperature:topp:)","title":"init(model: Model, input: String?, instruction: String, n: Int?, temperature: Double?, topP: Double?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/editsquery\/input","title":"let input: String?","type":"property"},{"path":"\/documentation\/openai\/editsquery\/instruction","title":"let instruction: String","type":"property"},{"path":"\/documentation\/openai\/editsquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/editsquery\/n","title":"let n: Int?","type":"property"},{"path":"\/documentation\/openai\/editsquery\/temperature","title":"let temperature: Double?","type":"property"},{"path":"\/documentation\/openai\/editsquery\/topp","title":"let topP: Double?","type":"property"}],"path":"\/documentation\/openai\/editsquery","title":"EditsQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/choice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/choice\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/editsresult\/choice\/text","title":"let text: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/choice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/editsresult\/choice\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/editsresult\/choice","title":"EditsResult.Choice","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/completiontokens","title":"let completionTokens: Int","type":"property"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/prompttokens","title":"let promptTokens: Int","type":"property"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/totaltokens","title":"let totalTokens: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/editsresult\/usage-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/editsresult\/usage-swift.struct","title":"EditsResult.Usage","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/choices","title":"let choices: [Choice]","type":"property"},{"path":"\/documentation\/openai\/editsresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/editsresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/editsresult\/usage-swift.property","title":"let usage: Usage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/editsresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/editsresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/editsresult","title":"EditsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/init(input:model:encodingformat:user:)","title":"init(input: `Self`.Input, model: Model, encodingFormat: `Self`.EncodingFormat?, user: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.property","title":"let encodingFormat: `Self`.EncodingFormat?","type":"property"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.property","title":"let input: `Self`.Input","type":"property"},{"path":"\/documentation\/openai\/embeddingsquery\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/embeddingsquery\/user","title":"let user: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/encodingformat","title":"case encodingFormat","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/input","title":"case input","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/embeddingsquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsquery\/codingkeys","title":"EmbeddingsQuery.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/base64","title":"case base64","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/float","title":"case float","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsquery\/encodingformat-swift.enum","title":"EmbeddingsQuery.EncodingFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/intlist(_:)","title":"case intList([Int])","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/intmatrix(_:)","title":"case intMatrix([[Int]])","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/string(_:)","title":"case string(String)","type":"case"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/stringlist(_:)","title":"case stringList([String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/init(intlist:)","title":"init(intList: [Int])","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/init(intmatrix:)","title":"init(intMatrix: [[Int]])","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/init(string:)","title":"init(string: String)","type":"init"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/init(stringlist:)","title":"init(stringList: [String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsquery\/input-swift.enum","title":"EmbeddingsQuery.Input","type":"enum"}],"path":"\/documentation\/openai\/embeddingsquery","title":"EmbeddingsQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/embedding\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/embedding\/embedding","title":"let embedding: [Double]","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/embedding\/index","title":"let index: Int","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/embedding\/object","title":"let object: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/embedding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsresult\/embedding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsresult\/embedding","title":"EmbeddingsResult.Embedding","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct\/prompttokens","title":"let promptTokens: Int","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct\/totaltokens","title":"let totalTokens: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.struct","title":"EmbeddingsResult.Usage","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/data","title":"let data: [Embedding]","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/model","title":"let model: String","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/embeddingsresult\/usage-swift.property","title":"let usage: Usage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/embeddingsresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/embeddingsresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/embeddingsresult","title":"EmbeddingsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/imageeditsquery\/init(image:prompt:mask:model:n:responseformat:size:user:)","title":"init(image: Data, prompt: String, mask: Data?, model: Model?, n: Int?, responseFormat: `Self`.ResponseFormat?, size: `Self`.Size?, user: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/image","title":"let image: Data","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/mask","title":"let mask: Data?","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/model","title":"let model: Model?","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/n","title":"let n: Int?","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/prompt","title":"let prompt: String","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/size-swift.property","title":"let size: Size?","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/user","title":"let user: String?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/responseformat-swift.typealias","title":"ImageEditsQuery.ResponseFormat","type":"typealias"},{"path":"\/documentation\/openai\/imageeditsquery\/size-swift.typealias","title":"ImageEditsQuery.Size","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/image","title":"case image","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/mask","title":"case mask","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/n","title":"case n","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/prompt","title":"case prompt","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/responseformat","title":"case responseFormat","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imageeditsquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imageeditsquery\/codingkeys","title":"ImageEditsQuery.CodingKeys","type":"enum"}],"path":"\/documentation\/openai\/imageeditsquery","title":"ImageEditsQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/imagevariationsquery\/init(image:model:n:responseformat:size:user:)","title":"init(image: Data, model: Model?, n: Int?, responseFormat: `Self`.ResponseFormat?, size: String?, user: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/image","title":"let image: Data","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/model","title":"let model: Model?","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/n","title":"let n: Int?","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/size","title":"let size: String?","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/user","title":"let user: String?","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/responseformat-swift.typealias","title":"ImageVariationsQuery.ResponseFormat","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/image","title":"case image","type":"case"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/n","title":"case n","type":"case"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/responseformat","title":"case responseFormat","type":"case"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagevariationsquery\/codingkeys","title":"ImageVariationsQuery.CodingKeys","type":"enum"}],"path":"\/documentation\/openai\/imagevariationsquery","title":"ImageVariationsQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/imagesquery\/init(prompt:model:n:quality:responseformat:size:style:user:)","title":"init(prompt: String, model: Model?, n: Int?, quality: `Self`.Quality?, responseFormat: `Self`.ResponseFormat?, size: Size?, style: `Self`.Style?, user: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/model","title":"let model: Model?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/n","title":"let n: Int?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/prompt","title":"let prompt: String","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.property","title":"let quality: `Self`.Quality?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.property","title":"let responseFormat: `Self`.ResponseFormat?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.property","title":"let size: `Self`.Size?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.property","title":"let style: `Self`.Style?","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/user","title":"let user: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/model","title":"case model","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/n","title":"case n","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/prompt","title":"case prompt","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/quality","title":"case quality","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/responseformat","title":"case responseFormat","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/size","title":"case size","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/style","title":"case style","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/user","title":"case user","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/imagesquery\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesquery\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesquery\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesquery\/codingkeys","title":"ImagesQuery.CodingKeys","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/hd","title":"case hd","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/standard","title":"case standard","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesquery\/quality-swift.enum","title":"ImagesQuery.Quality","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/b64_json","title":"case b64_json","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesquery\/responseformat-swift.enum","title":"ImagesQuery.ResponseFormat","type":"enum"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesquery\/size-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesquery\/size-swift.enum","title":"ImagesQuery.Size","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/natural","title":"case natural","type":"case"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/vivid","title":"case vivid","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesquery\/style-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesquery\/style-swift.enum","title":"ImagesQuery.Style","type":"enum"}],"path":"\/documentation\/openai\/imagesquery","title":"ImagesQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/b64json","title":"let b64Json: String?","type":"property"},{"path":"\/documentation\/openai\/imagesresult\/image\/revisedprompt","title":"let revisedPrompt: String?","type":"property"},{"path":"\/documentation\/openai\/imagesresult\/image\/url","title":"let url: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/b64json","title":"case b64Json","type":"case"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/revisedprompt","title":"case revisedPrompt","type":"case"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/url","title":"case url","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesresult\/image\/codingkeys","title":"ImagesResult.Image.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/image\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesresult\/image\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesresult\/image","title":"ImagesResult.Image","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/imagesresult\/data","title":"let data: [`Self`.Image]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/imagesresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/imagesresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/imagesresult","title":"ImagesResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/modelquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/modelquery\/init(model:)","title":"init(model: Model)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/modelquery\/model","title":"let model: Model","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/modelquery\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/modelquery\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/modelquery","title":"ModelQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/created","title":"let created: TimeInterval","type":"property"},{"path":"\/documentation\/openai\/modelresult\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/modelresult\/object","title":"let object: String","type":"property"},{"path":"\/documentation\/openai\/modelresult\/ownedby","title":"let ownedBy: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/created","title":"case created","type":"case"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/object","title":"case object","type":"case"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/ownedby","title":"case ownedBy","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/modelresult\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/modelresult\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/modelresult\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/modelresult\/codingkeys","title":"ModelResult.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/modelresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/modelresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/modelresult","title":"ModelResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/modelsresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/modelsresult\/data","title":"let data: [ModelResult]","type":"property"},{"path":"\/documentation\/openai\/modelsresult\/object","title":"let object: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/modelsresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/modelsresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/modelsresult","title":"ModelsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsquery\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/openai\/moderationsquery\/init(input:model:)","title":"init(input: String, model: Model?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsquery\/input","title":"let input: String","type":"property"},{"path":"\/documentation\/openai\/moderationsquery\/model","title":"let model: Model?","type":"property"}],"path":"\/documentation\/openai\/moderationsquery","title":"ModerationsQuery","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/harassment","title":"let harassment: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/harassmentthreatening","title":"let harassmentThreatening: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/hate","title":"let hate: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/hatethreatening","title":"let hateThreatening: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/selfharm","title":"let selfHarm: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/selfharminstructions","title":"let selfHarmInstructions: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/selfharmintent","title":"let selfHarmIntent: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sexual","title":"let sexual: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sexualminors","title":"let sexualMinors: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/violence","title":"let violence: Bool","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/violencegraphic","title":"let violenceGraphic: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<[(String, Bool)]>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/harassment","title":"case harassment","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/harassmentthreatening","title":"case harassmentThreatening","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/hate","title":"case hate","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/hatethreatening","title":"case hateThreatening","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/selfharm","title":"case selfHarm","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/selfharminstructions","title":"case selfHarmInstructions","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/selfharmintent","title":"case selfHarmIntent","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/sexual","title":"case sexual","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/sexualminors","title":"case sexualMinors","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/violence","title":"case violence","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/violencegraphic","title":"case violenceGraphic","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/codingkeys","title":"ModerationsResult.Moderation.Categories.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/flatmap(_:)-58ftf","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/flatmap(_:)-620l0","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sorted(using:)-1i5bp","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sorted(using:)-7en4u","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.struct","title":"ModerationsResult.Moderation.Categories","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/harassment","title":"let harassment: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/harassmentthreatening","title":"let harassmentThreatening: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/hate","title":"let hate: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/hatethreatening","title":"let hateThreatening: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/selfharm","title":"let selfHarm: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/selfharminstructions","title":"let selfHarmInstructions: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/selfharmintent","title":"let selfHarmIntent: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sexual","title":"let sexual: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sexualminors","title":"let sexualMinors: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/violence","title":"let violence: Double","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/violencegraphic","title":"let violenceGraphic: Double","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/makeiterator()","title":"func makeIterator() -> IndexingIterator<[(String, Bool)]>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/harassment","title":"case harassment","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/harassmentthreatening","title":"case harassmentThreatening","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/hate","title":"case hate","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/hatethreatening","title":"case hateThreatening","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/selfharm","title":"case selfHarm","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/selfharminstructions","title":"case selfHarmInstructions","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/selfharmintent","title":"case selfHarmIntent","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/sexual","title":"case sexual","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/sexualminors","title":"case sexualMinors","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/violence","title":"case violence","type":"case"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/violencegraphic","title":"case violenceGraphic","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/codingkeys","title":"ModerationsResult.Moderation.CategoryScores.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/flatmap(_:)-1aaev","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/flatmap(_:)-4k5b6","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sorted(using:)-4citf","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sorted(using:)-5msgj","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.struct","title":"ModerationsResult.Moderation.CategoryScores","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categories-swift.property","title":"let categories: Categories","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/categoryscores-swift.property","title":"let categoryScores: CategoryScores","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/flagged","title":"let flagged: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/moderation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/moderation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult\/moderation","title":"ModerationsResult.Moderation","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/model","title":"let model: Model","type":"property"},{"path":"\/documentation\/openai\/moderationsresult\/results","title":"let results: [`Self`.Moderation]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/moderationsresult\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/moderationsresult\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/openai\/moderationsresult","title":"ModerationsResult","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/vector\/cosinedifference(a:b:)","title":"func cosineDifference(a: [Double], b: [Double]) -> Double","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/openai\/vector\/cosinesimilarity(a:b:)","title":"static func cosineSimilarity(a: [Double], b: [Double]) -> Double","type":"method"}],"path":"\/documentation\/openai\/vector","title":"Vector","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/openai\/model","title":"Model","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/openai\/openaierror\/emptydata","title":"case emptyData","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/openai\/openaierror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/openai\/openaierror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/openaierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/openai\/openaierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/openai\/openaierror","title":"OpenAIError","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/openai\/swift\/string\/ada","title":"static let ada: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/babbage","title":"static let babbage: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/codedavinciedit_001","title":"static let codeDavinciEdit_001: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/curie","title":"static let curie: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/dall_e_2","title":"static let dall_e_2: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/dall_e_3","title":"static let dall_e_3: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/davinci","title":"static let davinci: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo","title":"static let gpt3_5Turbo: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_0125","title":"static let gpt3_5Turbo_0125: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_0301","title":"static let gpt3_5Turbo_0301: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_0613","title":"static let gpt3_5Turbo_0613: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_1106","title":"static let gpt3_5Turbo_1106: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_16k","title":"static let gpt3_5Turbo_16k: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt3_5turbo_16k_0613","title":"static let gpt3_5Turbo_16k_0613: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4","title":"static let gpt4: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_0125_preview","title":"static let gpt4_0125_preview: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_0314","title":"static let gpt4_0314: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_0613","title":"static let gpt4_0613: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_1106_preview","title":"static let gpt4_1106_preview: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_32k","title":"static let gpt4_32k: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_32k_0314","title":"static let gpt4_32k_0314: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_32k_0613","title":"static let gpt4_32k_0613: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_turbo_preview","title":"static let gpt4_turbo_preview: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/gpt4_vision_preview","title":"static let gpt4_vision_preview: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/moderation","title":"static let moderation: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textada","title":"static let textAda: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textbabbage","title":"static let textBabbage: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textcurie","title":"static let textCurie: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textdavinci_001","title":"static let textDavinci_001: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textdavinci_002","title":"static let textDavinci_002: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textdavinci_003","title":"static let textDavinci_003: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textembedding3","title":"static let textEmbedding3: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textembedding3large","title":"static let textEmbedding3Large: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textembeddingada","title":"static let textEmbeddingAda: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textmoderationlatest","title":"static let textModerationLatest: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textmoderationstable","title":"static let textModerationStable: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textsearchada","title":"static let textSearchAda: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textsearchbabbagedoc","title":"static let textSearchBabbageDoc: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/textsearchbabbagequery001","title":"static let textSearchBabbageQuery001: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/tts_1","title":"static let tts_1: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/tts_1_hd","title":"static let tts_1_hd: String","type":"property"},{"path":"\/documentation\/openai\/swift\/string\/whisper_1","title":"static let whisper_1: String","type":"property"}],"path":"\/documentation\/openai\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/openai\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/openai","title":"OpenAI","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}