{"abstract":[{"text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"metadata":{"roleHeading":"Instance Method","required":true,"externalID":"s:6OpenAI0A10AIProtocolP5model5query10completionyAA10ModelQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"text":"(","kind":"text"},{"text":"query","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI10ModelQueryV","text":"ModelQuery"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"kind":"text","text":")"}],"modules":[{"name":"OpenAI"}],"title":"model(query:completion:)","symbolKind":"method"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"kind":"text","text":"("},{"text":"query","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6OpenAI10ModelQueryV","text":"ModelQuery","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","text":"ModelResult","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"query","content":[{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ModelQuery"},{"type":"text","text":" object containing the input parameters for the API request, which is only the model to be queried."}]}]},{"name":"completion","content":[{"inlineContent":[{"type":"text","text":"A closure which receives the result when the API request finishes. The closureâ€™s parameter, "},{"type":"codeVoice","code":"Result<ModelResult, Error>"},{"type":"text","text":", will contain either the "},{"type":"codeVoice","code":"ModelResult"},{"type":"text","text":" object with more information about the model, or an error if the request failed."}],"type":"paragraph"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","code":["let query = ModelQuery(model: .gpt3_5Turbo)","openAI.model(query: query) { result in","  \/\/Handle response here","}"],"syntax":null},{"items":[{"content":[]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openai\/openaiprotocol\/model(query:completion:)"]}],"references":{"doc://OpenAI/documentation/OpenAI/ModelQuery":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModelQuery","kind":"identifier"}],"title":"ModelQuery","kind":"symbol","url":"\/documentation\/openai\/modelquery","type":"topic","navigatorTitle":[{"text":"ModelQuery","kind":"identifier"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","abstract":[{"text":"Retrieves a model instance, providing basic information about the model such as the owner and permissioning.","type":"text"}],"role":"symbol"},"doc://OpenAI/documentation/OpenAI/ModelResult":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModelResult","kind":"identifier"}],"title":"ModelResult","kind":"symbol","url":"\/documentation\/openai\/modelresult","type":"topic","navigatorTitle":[{"text":"ModelResult","kind":"identifier"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","abstract":[{"type":"text","text":"The model object matching the specified ID."}],"role":"symbol"},"doc://OpenAI/documentation/OpenAI":{"type":"topic","abstract":[],"role":"collection","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI","title":"OpenAI","url":"\/documentation\/openai","kind":"symbol"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/model(query:completion:)":{"kind":"symbol","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","role":"symbol","title":"model(query:completion:)","abstract":[{"type":"text","text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3."}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"model","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI10ModelQueryV","text":"ModelQuery"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult","kind":"typeIdentifier"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/openai\/openaiprotocol\/model(query:completion:)","required":true},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"role":"symbol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"OpenAIProtocol","kind":"identifier"}],"url":"\/documentation\/openai\/openaiprotocol","title":"OpenAIProtocol"}}}