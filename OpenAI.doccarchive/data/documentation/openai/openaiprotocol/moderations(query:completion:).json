{"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openai\/openaiprotocol\/moderations(query:completion:)"]}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"This function sends a moderations query to the OpenAI API and retrieves a list of category results to classify how text may violate OpenAI’s Content Policy."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moderations"},{"text":"(","kind":"text"},{"text":"query","kind":"externalParam"},{"kind":"text","text":": "},{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsQuery","text":"ModerationsQuery","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI16ModerationsQueryV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"ModerationsResult","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsResult","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI17ModerationsResultV"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"query","content":[{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ModerationsQuery"},{"type":"text","text":" object containing the input parameters for the API request. This includes the input text and optionally the model to be used."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A closure which receives the result when the API request finishes. The closure’s parameter, ","type":"text"},{"type":"codeVoice","code":"Result<ModerationsResult, Error>"},{"text":", will contain either the ","type":"text"},{"code":"ModerationsResult","type":"codeVoice"},{"text":" object with the list of category results, or an error if the request failed.","type":"text"}],"type":"paragraph"}],"name":"completion"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":null,"code":["let query = ModerationsQuery(input: \"I want to kill them.\")","openAI.moderations(query: query) { result in","  \/\/Handle response here","}"],"type":"codeListing"},{"type":"unorderedList","items":[{"content":[]}]}]}],"metadata":{"externalID":"s:6OpenAI0A10AIProtocolP11moderations5query10completionyAA16ModerationsQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","modules":[{"name":"OpenAI"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"moderations","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6OpenAI16ModerationsQueryV","text":"ModerationsQuery","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"text":"ModerationsResult","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI17ModerationsResultV"},{"text":", ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"title":"moderations(query:completion:)","required":true,"platforms":[{"beta":false,"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"iOS"}],"roleHeading":"Instance Method","symbolKind":"method","role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/moderations(query:completion:)"},"hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"references":{"doc://OpenAI/documentation/OpenAI/ModerationsQuery":{"url":"\/documentation\/openai\/moderationsquery","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModerationsQuery"}],"kind":"symbol","title":"ModerationsQuery","type":"topic","navigatorTitle":[{"text":"ModerationsQuery","kind":"identifier"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsQuery"},"doc://OpenAI/documentation/OpenAI/ModerationsResult":{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsResult","type":"topic","abstract":[],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ModerationsResult"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModerationsResult"}],"url":"\/documentation\/openai\/moderationsresult","kind":"symbol","title":"ModerationsResult"},"doc://OpenAI/documentation/OpenAI":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI","role":"collection","url":"\/documentation\/openai","title":"OpenAI"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"url":"\/documentation\/openai\/openaiprotocol","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OpenAIProtocol"}],"title":"OpenAIProtocol","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","role":"symbol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}]},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/moderations(query:completion:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"moderations"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"text":"ModerationsQuery","preciseIdentifier":"s:6OpenAI16ModerationsQueryV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI17ModerationsResultV","text":"ModerationsResult"},{"kind":"text","text":", "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"moderations(query:completion:)","url":"\/documentation\/openai\/openaiprotocol\/moderations(query:completion:)","type":"topic","required":true,"kind":"symbol","abstract":[{"text":"This function sends a moderations query to the OpenAI API and retrieves a list of category results to classify how text may violate OpenAI’s Content Policy.","type":"text"}],"role":"symbol","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/moderations(query:completion:)"}}}