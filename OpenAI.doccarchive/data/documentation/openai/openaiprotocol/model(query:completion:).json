{"abstract":[{"text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:6OpenAI10ModelQueryV","kind":"typeIdentifier","text":"ModelQuery","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","kind":"typeIdentifier","text":"ModelResult","preciseIdentifier":"s:6OpenAI11ModelResultV"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ModelQuery"},{"type":"text","text":" object containing the input parameters for the API request, which is only the model to be queried."}],"type":"paragraph"}],"name":"query"},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"A closure which receives the result when the API request finishes. The closureâ€™s parameter, ","type":"text"},{"type":"codeVoice","code":"Result<ModelResult, Error>"},{"text":", will contain either the ","type":"text"},{"code":"ModelResult","type":"codeVoice"},{"text":" object with more information about the model, or an error if the request failed.","type":"text"}]}]}],"kind":"parameters"},{"content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"syntax":null,"type":"codeListing","code":["let query = ModelQuery(model: .gpt3_5Turbo)","openAI.model(query: query) { result in","  \/\/Handle response here","}"]},{"items":[{"content":[]}],"type":"unorderedList"}],"kind":"content"}],"metadata":{"title":"model(query:completion:)","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"OpenAI"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"model"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ModelQuery","preciseIdentifier":"s:6OpenAI10ModelQueryV"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"text":"ModelResult","preciseIdentifier":"s:6OpenAI11ModelResultV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":")"}],"required":true,"externalID":"s:6OpenAI0A10AIProtocolP5model5query10completionyAA10ModelQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"variants":[{"paths":["\/documentation\/openai\/openaiprotocol\/model(query:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","references":{"doc://OpenAI/documentation/OpenAI/ModelQuery":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModelQuery"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","url":"\/documentation\/openai\/modelquery","title":"ModelQuery","abstract":[{"text":"Retrieves a model instance, providing basic information about the model such as the owner and permissioning.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"ModelQuery","kind":"identifier"}],"kind":"symbol"},"doc://OpenAI/documentation/OpenAI/ModelResult":{"url":"\/documentation\/openai\/modelresult","kind":"symbol","abstract":[{"text":"The model object matching the specified ID.","type":"text"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ModelResult","kind":"identifier"}],"title":"ModelResult","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","role":"symbol","navigatorTitle":[{"text":"ModelResult","kind":"identifier"}]},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/model(query:completion:)":{"required":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"model"},{"kind":"text","text":"("},{"text":"query","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ModelQuery","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI10ModelQueryV"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"abstract":[{"text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3.","type":"text"}],"title":"model(query:completion:)","url":"\/documentation\/openai\/openaiprotocol\/model(query:completion:)"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"url":"\/documentation\/openai\/openaiprotocol","kind":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OpenAIProtocol"}],"title":"OpenAIProtocol","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","role":"symbol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}]},"doc://OpenAI/documentation/OpenAI":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI","role":"collection","url":"\/documentation\/openai","title":"OpenAI"}}}