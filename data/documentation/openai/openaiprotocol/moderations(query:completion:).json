{"sections":[],"abstract":[{"type":"text","text":"This function sends a moderations query to the OpenAI API and retrieves a list of category results to classify how text may violate OpenAI’s Content Policy."}],"hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"metadata":{"required":true,"roleHeading":"Instance Method","modules":[{"name":"OpenAI"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"moderations"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModerationsQuery","preciseIdentifier":"s:6OpenAI16ModerationsQueryV"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:6OpenAI17ModerationsResultV","text":"ModerationsResult","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":")","kind":"text"}],"platforms":[{"unavailable":false,"deprecated":false,"introducedAt":"13.0","name":"iOS","beta":false}],"role":"symbol","externalID":"s:6OpenAI0A10AIProtocolP11moderations5query10completionyAA16ModerationsQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","title":"moderations(query:completion:)"},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"moderations"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"text":"ModerationsQuery","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI16ModerationsQueryV","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsQuery"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"text":" (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsResult","text":"ModerationsResult","preciseIdentifier":"s:6OpenAI17ModerationsResultV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"parameters":[{"name":"query","content":[{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ModerationsQuery"},{"type":"text","text":" object containing the input parameters for the API request. This includes the input text and optionally the model to be used."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"A closure which receives the result when the API request finishes. The closure’s parameter, "},{"type":"codeVoice","code":"Result<ModerationsResult, Error>"},{"type":"text","text":", will contain either the "},{"code":"ModerationsResult","type":"codeVoice"},{"text":" object with the list of category results, or an error if the request failed.","type":"text"}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Example:"}],"type":"paragraph"},{"code":["let query = ModerationsQuery(input: \"I want to kill them.\")","openAI.moderations(query: query) { result in","  \/\/Handle response here","}"],"type":"codeListing","syntax":null},{"items":[{"content":[]}],"type":"unorderedList"}]}],"identifier":{"url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/moderations(query:completion:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/openai\/openaiprotocol\/moderations(query:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://OpenAI/documentation/OpenAI":{"abstract":[],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI","url":"\/documentation\/openai","kind":"symbol","type":"topic","title":"OpenAI","role":"collection"},"doc://OpenAI/documentation/OpenAI/ModerationsQuery":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ModerationsQuery","kind":"identifier"}],"abstract":[],"url":"\/documentation\/openai\/moderationsquery","title":"ModerationsQuery","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsQuery","navigatorTitle":[{"kind":"identifier","text":"ModerationsQuery"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://OpenAI/documentation/OpenAI/ModerationsResult":{"title":"ModerationsResult","type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/openai\/moderationsresult","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModerationsResult","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ModerationsResult","kind":"identifier"}],"navigatorTitle":[{"text":"ModerationsResult","kind":"identifier"}]},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/moderations(query:completion:)":{"abstract":[{"type":"text","text":"This function sends a moderations query to the OpenAI API and retrieves a list of category results to classify how text may violate OpenAI’s Content Policy."}],"url":"\/documentation\/openai\/openaiprotocol\/moderations(query:completion:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"moderations","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6OpenAI16ModerationsQueryV","text":"ModerationsQuery","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:s6ResultO","text":"Result","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6OpenAI17ModerationsResultV","text":"ModerationsResult","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"moderations(query:completion:)","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/moderations(query:completion:)","required":true,"kind":"symbol","type":"topic","role":"symbol"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"url":"\/documentation\/openai\/openaiprotocol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","abstract":[],"role":"symbol","title":"OpenAIProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"OpenAIProtocol","kind":"identifier"}]}}}