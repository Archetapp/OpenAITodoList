{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"model"},{"kind":"text","text":"("},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"text":"ModelQuery","preciseIdentifier":"s:6OpenAI10ModelQueryV","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"text":"@escaping","kind":"attribute"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ModelQuery"},{"type":"text","text":" object containing the input parameters for the API request, which is only the model to be queried."}],"type":"paragraph"}],"name":"query"},{"name":"completion","content":[{"type":"paragraph","inlineContent":[{"text":"A closure which receives the result when the API request finishes. The closureâ€™s parameter, ","type":"text"},{"type":"codeVoice","code":"Result<ModelResult, Error>"},{"text":", will contain either the ","type":"text"},{"type":"codeVoice","code":"ModelResult"},{"type":"text","text":" object with more information about the model, or an error if the request failed."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"code":["let query = ModelQuery(model: .gpt3_5Turbo)","openAI.model(query: query) { result in","  \/\/Handle response here","}"],"syntax":null,"type":"codeListing"},{"type":"unorderedList","items":[{"content":[]}]}]}],"variants":[{"paths":["\/documentation\/openai\/openaiprotocol\/model(query:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"identifier":{"url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","interfaceLanguage":"swift"},"sections":[],"metadata":{"required":true,"role":"symbol","modules":[{"name":"OpenAI"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI10ModelQueryV","text":"ModelQuery"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"roleHeading":"Instance Method","externalID":"s:6OpenAI0A10AIProtocolP5model5query10completionyAA10ModelQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","title":"model(query:completion:)","symbolKind":"method"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3."}],"references":{"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"url":"\/documentation\/openai\/openaiprotocol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","abstract":[],"role":"symbol","title":"OpenAIProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"OpenAIProtocol","kind":"identifier"}]},"doc://OpenAI/documentation/OpenAI/ModelQuery":{"url":"\/documentation\/openai\/modelquery","navigatorTitle":[{"text":"ModelQuery","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","abstract":[{"type":"text","text":"Retrieves a model instance, providing basic information about the model such as the owner and permissioning."}],"role":"symbol","title":"ModelQuery","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModelQuery"}]},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/model(query:completion:)":{"abstract":[{"type":"text","text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3."}],"url":"\/documentation\/openai\/openaiprotocol\/model(query:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"text":"(","kind":"text"},{"text":"query","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ModelQuery","preciseIdentifier":"s:6OpenAI10ModelQueryV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI11ModelResultV","text":"ModelResult"},{"kind":"text","text":", "},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"model(query:completion:)","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","required":true,"kind":"symbol","type":"topic","role":"symbol"},"doc://OpenAI/documentation/OpenAI/ModelResult":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ModelResult","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ModelResult"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","url":"\/documentation\/openai\/modelresult","kind":"symbol","title":"ModelResult","abstract":[{"type":"text","text":"The model object matching the specified ID."}]},"doc://OpenAI/documentation/OpenAI":{"abstract":[],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI","url":"\/documentation\/openai","kind":"symbol","type":"topic","title":"OpenAI","role":"collection"}}}