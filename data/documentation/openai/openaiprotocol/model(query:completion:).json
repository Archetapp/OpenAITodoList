{"abstract":[{"type":"text","text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/openai\/openaiprotocol\/model(query:completion:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"model"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"query"},{"kind":"text","text":": "},{"preciseIdentifier":"s:6OpenAI10ModelQueryV","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","text":"ModelQuery","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"text":" (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult","kind":"typeIdentifier","text":"ModelResult","preciseIdentifier":"s:6OpenAI11ModelResultV"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"text":">) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]},{"parameters":[{"name":"query","content":[{"inlineContent":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ModelQuery"},{"type":"text","text":" object containing the input parameters for the API request, which is only the model to be queried."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"A closure which receives the result when the API request finishes. The closureâ€™s parameter, ","type":"text"},{"type":"codeVoice","code":"Result<ModelResult, Error>"},{"type":"text","text":", will contain either the "},{"type":"codeVoice","code":"ModelResult"},{"type":"text","text":" object with more information about the model, or an error if the request failed."}],"type":"paragraph"}],"name":"completion"}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"}]},{"type":"codeListing","syntax":null,"code":["let query = ModelQuery(model: .gpt3_5Turbo)","openAI.model(query: query) { result in","  \/\/Handle response here","}"]},{"items":[{"content":[]}],"type":"unorderedList"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/OpenAI\/documentation\/OpenAI","doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol"]]},"kind":"symbol","sections":[],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"model","kind":"identifier"},{"text":"(","kind":"text"},{"text":"query","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ModelQuery","preciseIdentifier":"s:6OpenAI10ModelQueryV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s6ResultO","text":"Result"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:6OpenAI11ModelResultV","kind":"typeIdentifier","text":"ModelResult"},{"kind":"text","text":", "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"text":">) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"externalID":"s:6OpenAI0A10AIProtocolP5model5query10completionyAA10ModelQueryV_ys6ResultOyAA0gI0Vs5Error_pGctF","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"OpenAI"}],"title":"model(query:completion:)","required":true},"references":{"doc://OpenAI/documentation/OpenAI":{"type":"topic","kind":"symbol","abstract":[],"role":"collection","url":"\/documentation\/openai","title":"OpenAI","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI"},"doc://OpenAI/documentation/OpenAI/ModelQuery":{"abstract":[{"type":"text","text":"Retrieves a model instance, providing basic information about the model such as the owner and permissioning."}],"type":"topic","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelQuery","role":"symbol","url":"\/documentation\/openai\/modelquery","kind":"symbol","title":"ModelQuery","navigatorTitle":[{"text":"ModelQuery","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ModelQuery"}]},"doc://OpenAI/documentation/OpenAI/ModelResult":{"role":"symbol","abstract":[{"text":"The model object matching the specified ID.","type":"text"}],"navigatorTitle":[{"text":"ModelResult","kind":"identifier"}],"type":"topic","kind":"symbol","title":"ModelResult","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ModelResult","kind":"identifier"}],"url":"\/documentation\/openai\/modelresult","identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/ModelResult"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol/model(query:completion:)":{"abstract":[{"text":"This function sends a model query to the OpenAI API and retrieves a model instance, providing owner information. The Models API in this usage enables you to gather detailed information on the model in question, like GPT-3.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"model","kind":"identifier"},{"kind":"text","text":"("},{"text":"query","kind":"externalParam"},{"kind":"text","text":": "},{"text":"ModelQuery","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI10ModelQueryV"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"text":"<","kind":"text"},{"text":"ModelResult","kind":"typeIdentifier","preciseIdentifier":"s:6OpenAI11ModelResultV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"text":")","kind":"text"}],"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol\/model(query:completion:)","role":"symbol","url":"\/documentation\/openai\/openaiprotocol\/model(query:completion:)","title":"model(query:completion:)","required":true,"type":"topic","kind":"symbol"},"doc://OpenAI/documentation/OpenAI/OpenAIProtocol":{"identifier":"doc:\/\/OpenAI\/documentation\/OpenAI\/OpenAIProtocol","role":"symbol","type":"topic","title":"OpenAIProtocol","navigatorTitle":[{"text":"OpenAIProtocol","kind":"identifier"}],"kind":"symbol","abstract":[],"url":"\/documentation\/openai\/openaiprotocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OpenAIProtocol"}]}}}